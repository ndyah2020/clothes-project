import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["blocks", "extra", "data"],
  _excluded2 = ["children", "className"];
import { cloneElement, forwardRef, isValidElement } from 'react';
import { Render, Provider, Container, useStore } from 'react-login-page';
import { Email } from './control/Email';
import { Password } from './control/Password';
import { Submit } from './control/Submit';
import { Reset } from './control/Reset';
import { Footer } from './control/Footer';
import { Logo } from './control/Logo';
import { Title } from './control/Title';
import './index.css';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export * from 'react-login-page';
export * from './control/Email';
export * from './control/Footer';
export * from './control/Password';
export * from './control/Submit';
export * from './control/Reset';
export * from './control/Title';
export * from './control/Logo';
var RenderLogin = () => {
  var _useStore = useStore(),
    {
      blocks = {},
      extra = {},
      data
    } = _useStore,
    label = _objectWithoutPropertiesLoose(_useStore, _excluded);
  var {
    fields,
    buttons
  } = data || {
    fields: []
  };
  return /*#__PURE__*/_jsx(Render, {
    children: /*#__PURE__*/_jsxs("div", {
      className: "login-page4-inner",
      children: [/*#__PURE__*/_jsx("aside", {
        children: blocks.banner
      }), /*#__PURE__*/_jsxs("main", {
        children: [/*#__PURE__*/_jsxs("header", {
          children: [blocks.title, blocks.logo]
        }), fields.sort((a, b) => a.index - b.index).map((item, idx) => {
          var extraLabel = extra[item.name];
          if (!item.children && !extraLabel) return null;
          if (!item.children && extraLabel) return /*#__PURE__*/_jsx("div", {
            children: extraLabel
          }, idx);
          var labelElement = label["$" + item.name];
          return /*#__PURE__*/_jsxs("label", {
            className: "rlp-" + item.name,
            children: [/*#__PURE__*/_jsxs("article", {
              children: [item.children, labelElement && /*#__PURE__*/_jsx("span", {
                className: "login-page4-label",
                children: labelElement
              }), /*#__PURE__*/_jsx("div", {
                className: "login-page4-border"
              })]
            }), extraLabel]
          }, item.name + idx);
        }), /*#__PURE__*/_jsx("section", {
          children: buttons.sort((a, b) => a.index - b.index).map((item, idx) => {
            var child = item.children;
            if (! /*#__PURE__*/isValidElement(child)) return null;
            return /*#__PURE__*/cloneElement(child, _extends({}, child.props, {
              key: item.name + idx
            }));
          })
        }), blocks.footer]
      })]
    })
  });
};
var LoginPage = /*#__PURE__*/forwardRef((props, ref) => {
  var {
      children,
      className
    } = props,
    divProps = _objectWithoutPropertiesLoose(props, _excluded2);
  return /*#__PURE__*/_jsxs(Provider, {
    children: [/*#__PURE__*/_jsx(Email, {}), /*#__PURE__*/_jsx(Password, {}), /*#__PURE__*/_jsx(Logo, {}), /*#__PURE__*/_jsx(Title, {}), /*#__PURE__*/_jsx(Title, {}), /*#__PURE__*/_jsx(Submit, {}), /*#__PURE__*/_jsx(Container, _extends({}, divProps, {
      ref: ref,
      className: "login-page4 " + (className || ''),
      children: /*#__PURE__*/_jsx(RenderLogin, {})
    })), children]
  });
});
var Login = LoginPage;
Login.Email = Email;
Login.Password = Password;
Login.Submit = Submit;
Login.Reset = Reset;
Login.Footer = Footer;
Login.Title = Title;
Login.Logo = Logo;
Login.displayName = 'LoginPage';
export default Login;